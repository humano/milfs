-- SQL para garantizar compatibilidad hacia atras con los formularios agrupados y campos unidos en areas o fieldset.
-- SE ASUME QUE EL LA EMPRESA (id_empresa) es UNO (1) SI NO ES ASI SE DEBE CAMBIAR ESTE VALOR  




CREATE TABLE IF NOT EXISTS `form_areas` (
`id` int(11) NOT NULL,
  `nombre` text NOT NULL,
  `descripcion` text NOT NULL,
  `estado` int(11) NOT NULL DEFAULT '0',
  `orden` int(11) NOT NULL DEFAULT '0' COMMENT 'Orden en que se muestran las areas',
  `id_empresa` int(11) NOT NULL
) ENGINE=InnoDB AUTO_INCREMENT=3 DEFAULT CHARSET=latin1;

--
-- Dumping data for table `form_areas`
--

INSERT INTO `form_areas` (`id`, `nombre`, `descripcion`, `estado`, `orden`, `id_empresa`) VALUES
(1, 'General', '', 1, 1, 1);

-- --------------------------------------------------------

-- Cambia el valor (campo_area) a  uno(1) en los campos que lo tienen en cero (0)
UPDATE `milfs`.`form_campos` SET `campo_area` = '1' WHERE `campo_area` = '0'

--
-- Table structure for table `form_grupo`
--

CREATE TABLE IF NOT EXISTS `form_grupo` (
`id_grupo` int(11) NOT NULL,
  `id` int(11) NOT NULL,
  `grupo` text NOT NULL,
  `id_empresa` int(11) NOT NULL
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

--
-- Indexes for dumped tables
--

--
-- Indexes for table `form_areas`
--
ALTER TABLE `form_areas`
 ADD PRIMARY KEY (`id`);

--
-- Indexes for table `form_grupo`
--
ALTER TABLE `form_grupo`
 ADD PRIMARY KEY (`id_grupo`);


--
-- AUTO_INCREMENT for table `form_areas`
--
ALTER TABLE `form_areas`
MODIFY `id` int(11) NOT NULL AUTO_INCREMENT,AUTO_INCREMENT=2;
--
-- AUTO_INCREMENT for table `form_grupo`
--
ALTER TABLE `form_grupo`
MODIFY `id_grupo` int(11) NOT NULL AUTO_INCREMENT;
